/*
 * Enzo Bot, a multipurpose discord bot
 *
 * Copyright (c) 2018 William "Enzo" Johnstone
 *
 * This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU Affero General Public License as published
 *  by the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU Affero General Public License for more details.
 *
 *  You should have received a copy of the GNU Affero General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 *
 */

plugins {
    id'java'
    id'application'
	id'maven'
    id'com.github.johnrengelman.shadow' version '2.0.2'
    id 'de.fuerstenau.buildconfig' version '1.1.8'
}

group = 'ml.enzodevelopment'
version = "2.15.0_${getGitHashShort()}"

mainClassName = 'ml.enzodevelopment.enzobot.EnzoBot'

sourceCompatibility = 1.8
targetCompatibility = 1.8

shadowJar {
    baseName = "EnzoBot"
    classifier = null
    version = null
    libsDirName = "../out"
}

repositories {
     maven { url 'http://jcenter.bintray.com' }
     maven { url 'https://jitpack.io' }
     maven { url 'mvnrepository.com' }
     maven { url 'http://repo.maven.apache.org/maven2' }
}

buildConfig {
    appName = project.name
    version = project.version
    buildConfigField("String", "OWNER_ID", "205056315351891969")
    buildConfigField("String", "GH_COMMIT", "${getGitHash()}")
    buildConfigField("String", "GH_COMMIT_SHORT", "${getGitHashShort()}")
    packageName = 'ml.enzodevelopment.enzobot'
    charset = 'UTF-8'
    clsName = 'BuildConfig'
}

dependencies {
    compile group: 'com.sparkjava', name: 'spark-core', version: '2.7.2'
    compile (group: 'net.dv8tion', name: 'JDA', version:'3.7.1_404') {
        exclude module: 'opus-java'
    }
    compile group: 'ch.qos.logback', name: 'logback-classic', version:'1.2.3'
    compile group: 'com.sedmelluq', name: 'lavaplayer', version:'1.3.7'
    compile group: 'commons-io', name: 'commons-io', version:'2.6'
    compile group: 'org.codehaus.groovy', name: 'groovy-all', version:'2.4.13'
    compile group: 'mysql', name: 'mysql-connector-java', version:'8.0.8-dmr'
    compile group: 'com.github.binaryoverload', name: 'JSON-Config', version:'2.7.8'
    compile group: 'io.sentry', name: 'sentry-logback', version:'1.7.2'
    compile group: 'org.apache.commons', name:'commons-lang3', version:'3.7'
    compile group: 'org.jtwig', name:'jtwig-core', version: '5.87.0.RELEASE'
    compile group: 'com.sparkjava', name: 'spark-template-jtwig', version: '2.7.1'
    compile group: 'com.github.JDA-Applications.JDA-Utilities', name: 'jda-utilities-oauth2', version: '8e11e6d'
}

compileJava.options.encoding = 'UTF-8'

def getGitHash() {
    def stdout = new ByteArrayOutputStream()
    exec {
	commandLine 'git', 'rev-parse', 'HEAD'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

def getGitHashShort() {
    def stdout = new ByteArrayOutputStream()
    exec {
	commandLine 'git', 'rev-parse', '--short', 'HEAD'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}
